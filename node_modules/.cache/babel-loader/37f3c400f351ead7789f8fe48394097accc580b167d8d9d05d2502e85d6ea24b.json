{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo } from 'react';\nimport { debounce } from '../../../../utilities/debounce.js';\nimport { useEventListener } from '../../../../utilities/use-event-listener.js';\nimport { useIsomorphicLayoutEffect } from '../../../../utilities/use-isomorphic-layout-effect.js';\nimport styles from './Actions.scss.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { ButtonGroup } from '../../../ButtonGroup/ButtonGroup.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\nconst ACTION_SPACING = 8;\nfunction Actions({\n  actions = [],\n  groups = [],\n  onActionRollup\n}) {\n  const i18n = useI18n();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const availableWidthRef = useRef(0);\n  const actionsAndGroupsLengthRef = useRef(0);\n  const timesMeasured = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const rollupActiveRef = useRef(null);\n  const {\n    polarisSummerEditions2023\n  } = useFeatures();\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [measuredActions, setMeasuredActions] = useState({\n    showable: [],\n    rolledUp: []\n  });\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const updateActions = useCallback(() => {\n    let actionsAndGroups = [...actions, ...groups];\n    if (groups.length > 0) {\n      // We don't want to include actions from the last group\n      // since it is always rendered with its own actions\n      actionsAndGroups = [...actionsAndGroups].slice(0, actionsAndGroups.length - 1);\n    }\n    setMeasuredActions(currentMeasuredActions => {\n      const showable = actionsAndGroups.slice(0, currentMeasuredActions.showable.length);\n      const rolledUp = actionsAndGroups.slice(currentMeasuredActions.showable.length, actionsAndGroups.length);\n      return {\n        showable,\n        rolledUp\n      };\n    });\n  }, [actions, groups]);\n  const measureActions = useCallback(() => {\n    if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n    const actionsAndGroups = [...actions, ...groups];\n    if (actionsAndGroups.length === 1) {\n      setMeasuredActions({\n        showable: actionsAndGroups,\n        rolledUp: []\n      });\n      return;\n    }\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        currentAvailableWidth = 0;\n        // Find last group if it exists and always render it as a rolled up action below\n        if (action === lastMenuGroup) return;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n    if (onActionRollup) {\n      // Note: Do not include last group actions since we are skipping `lastMenuGroup` above\n      // as it is always rendered with its own actions\n      const isRollupActive = newShowableActions.length < actionsAndGroups.length - 1;\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n    setMeasuredActions({\n      showable: newShowableActions,\n      rolledUp: newRolledUpActions\n    });\n    timesMeasured.current += 1;\n    actionsAndGroupsLengthRef.current = actionsAndGroups.length;\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, onActionRollup]);\n  const handleResize = useMemo(() => debounce(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    // Set timesMeasured to 0 to allow re-measuring\n    timesMeasured.current = 0;\n    measureActions();\n  }, 50, {\n    leading: false,\n    trailing: true\n  }), [measureActions]);\n  useEventListener('resize', handleResize);\n  useIsomorphicLayoutEffect(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    if (\n    // Allow measuring twice\n    // This accounts for the initial paint and re-flow\n    timesMeasured.current >= 2 && [...actions, ...groups].length === actionsAndGroupsLengthRef.current) {\n      updateActions();\n      return;\n    }\n    measureActions();\n  }, [actions, groups, measureActions, updateActions]);\n  const actionsMarkup = actions.map(action => {\n    if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action)) return null;\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content);\n  });\n  const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map(action => action.content && /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const filteredGroups = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some(rolledUpGroup => isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title);\n  });\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const isLastMenuGroup = group === lastMenuGroup;\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = measuredActions.rolledUp.reduce(([actions, sections], action) => {\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({\n            ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n      return [actions, sections];\n    }, [[], []]);\n    if (!isDefaultGroup && !isLastMenuGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && isLastMenuGroup) {\n      // render the last, rollup group with its actions and finalRolledUpActions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...finalRolledUpActions, ...groupActions],\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) {\n      // Render the default group to rollup into if one does not exist\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: finalRolledUpActions,\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = /*#__PURE__*/React.createElement(ButtonGroup, {\n    spacing: polarisSummerEditions2023 ? 'tight' : 'extraTight'\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayout,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup);\n}\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\nexport { Actions };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","debounce","useEventListener","useIsomorphicLayoutEffect","styles","MenuGroup","ButtonGroup","useI18n","useFeatures","SecondaryAction","ACTION_SPACING","Actions","actions","groups","onActionRollup","i18n","actionsLayoutRef","menuGroupWidthRef","availableWidthRef","actionsAndGroupsLengthRef","timesMeasured","actionWidthsRef","rollupActiveRef","polarisSummerEditions2023","activeMenuGroup","setActiveMenuGroup","undefined","measuredActions","setMeasuredActions","showable","rolledUp","defaultRollupGroup","title","translate","lastMenuGroup","pop","lastMenuGroupWidth","current","handleActionsOffsetWidth","width","handleMenuGroupToggle","group","handleMenuGroupClose","updateActions","actionsAndGroups","length","slice","currentMeasuredActions","measureActions","currentAvailableWidth","newShowableActions","newRolledUpActions","forEach","action","index","canFitAction","isRollupActive","handleResize","offsetWidth","leading","trailing","actionsMarkup","map","includes","content","onAction","rest","createElement","Object","assign","key","onClick","getOffsetWidth","rollUppableActionsMarkup","filteredGroups","filter","some","rolledUpGroup","isMenuGroup","groupsMarkup","groupActions","isDefaultGroup","isLastMenuGroup","finalRolledUpActions","finalRolledUpSectionGroups","reduce","sections","push","items","sectionAction","disabled","active","onOpen","onClose","groupedActionsMarkup","spacing","className","ActionsLayout","ref","actionOrMenuGroup"],"sources":["/Users/nick/Documents/app info front ui/node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo } from 'react';\nimport { debounce } from '../../../../utilities/debounce.js';\nimport { useEventListener } from '../../../../utilities/use-event-listener.js';\nimport { useIsomorphicLayoutEffect } from '../../../../utilities/use-isomorphic-layout-effect.js';\nimport styles from './Actions.scss.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { ButtonGroup } from '../../../ButtonGroup/ButtonGroup.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { useFeatures } from '../../../../utilities/features/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\n\nconst ACTION_SPACING = 8;\nfunction Actions({\n  actions = [],\n  groups = [],\n  onActionRollup\n}) {\n  const i18n = useI18n();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const availableWidthRef = useRef(0);\n  const actionsAndGroupsLengthRef = useRef(0);\n  const timesMeasured = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const rollupActiveRef = useRef(null);\n  const {\n    polarisSummerEditions2023\n  } = useFeatures();\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [measuredActions, setMeasuredActions] = useState({\n    showable: [],\n    rolledUp: []\n  });\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const updateActions = useCallback(() => {\n    let actionsAndGroups = [...actions, ...groups];\n    if (groups.length > 0) {\n      // We don't want to include actions from the last group\n      // since it is always rendered with its own actions\n      actionsAndGroups = [...actionsAndGroups].slice(0, actionsAndGroups.length - 1);\n    }\n    setMeasuredActions(currentMeasuredActions => {\n      const showable = actionsAndGroups.slice(0, currentMeasuredActions.showable.length);\n      const rolledUp = actionsAndGroups.slice(currentMeasuredActions.showable.length, actionsAndGroups.length);\n      return {\n        showable,\n        rolledUp\n      };\n    });\n  }, [actions, groups]);\n  const measureActions = useCallback(() => {\n    if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n    const actionsAndGroups = [...actions, ...groups];\n    if (actionsAndGroups.length === 1) {\n      setMeasuredActions({\n        showable: actionsAndGroups,\n        rolledUp: []\n      });\n      return;\n    }\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        currentAvailableWidth = 0;\n        // Find last group if it exists and always render it as a rolled up action below\n        if (action === lastMenuGroup) return;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n    if (onActionRollup) {\n      // Note: Do not include last group actions since we are skipping `lastMenuGroup` above\n      // as it is always rendered with its own actions\n      const isRollupActive = newShowableActions.length < actionsAndGroups.length - 1;\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n    setMeasuredActions({\n      showable: newShowableActions,\n      rolledUp: newRolledUpActions\n    });\n    timesMeasured.current += 1;\n    actionsAndGroupsLengthRef.current = actionsAndGroups.length;\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, onActionRollup]);\n  const handleResize = useMemo(() => debounce(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    // Set timesMeasured to 0 to allow re-measuring\n    timesMeasured.current = 0;\n    measureActions();\n  }, 50, {\n    leading: false,\n    trailing: true\n  }), [measureActions]);\n  useEventListener('resize', handleResize);\n  useIsomorphicLayoutEffect(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n    if (\n    // Allow measuring twice\n    // This accounts for the initial paint and re-flow\n    timesMeasured.current >= 2 && [...actions, ...groups].length === actionsAndGroupsLengthRef.current) {\n      updateActions();\n      return;\n    }\n    measureActions();\n  }, [actions, groups, measureActions, updateActions]);\n  const actionsMarkup = actions.map(action => {\n    if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action)) return null;\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content);\n  });\n  const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map(action => action.content && /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const filteredGroups = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some(rolledUpGroup => isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title);\n  });\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const isLastMenuGroup = group === lastMenuGroup;\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = measuredActions.rolledUp.reduce(([actions, sections], action) => {\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({\n            ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n      return [actions, sections];\n    }, [[], []]);\n    if (!isDefaultGroup && !isLastMenuGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && isLastMenuGroup) {\n      // render the last, rollup group with its actions and finalRolledUpActions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...finalRolledUpActions, ...groupActions],\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) {\n      // Render the default group to rollup into if one does not exist\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: finalRolledUpActions,\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = /*#__PURE__*/React.createElement(ButtonGroup, {\n    spacing: polarisSummerEditions2023 ? 'tight' : 'extraTight'\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayout,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup);\n}\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}